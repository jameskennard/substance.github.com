{"version":3,"file":null,"sources":["substance/lib/StandaloneHTMLImporter.js","substance/lib/StandaloneHTMLExporter.js","substance/lib/minimal-switch-text-type/MinimalSwitchTextTypeTool.js","substance/lib/minimal-switch-text-type/MinimalSwitchTextTypePackage.js","substance/lib/comment/Comment.js","substance/lib/comment/CommentHTMLConverter.js","substance/lib/comment/EditCommentTool.js","substance/lib/comment/CommentPackage.js","substance/lib/StandaloneConfigurator.js","substance/lib/RichTextArea.js","substance/lib/Forms.js","substance/lib/substance-forms.js"],"sourcesContent":["import { HTMLImporter } from 'substance'\n\nclass StandaloneHTMLImporter extends HTMLImporter {\n  constructor(config) {\n    super(config)\n    this.reset()\n  }\n}\n\nexport default StandaloneHTMLImporter\n","import { HTMLExporter } from 'substance'\n\nclass StandaloneHTMLExporter extends HTMLExporter {}\n\nexport default StandaloneHTMLExporter\n","import { Tool } from 'substance'\n\n/*\n  Simplified version of SwitchTextTypeTool that looks nicer\n  in overlay-only editing scenarios\n*/\nclass MinimalSwitchTextTypeTool extends Tool {\n\n  render($$) {\n    let Button = this.getComponent('button')\n    let el = $$('div').addClass('sc-minimal-switch-text-type')\n    this.props.textTypes.forEach((textType) => {\n      let button = $$(Button, {\n        label: textType.name,\n        active: this.props.currentTextType.name === textType.name,\n        disabled: this.props.disabled,\n        style: this.props.style\n      }).attr('data-type', textType.name)\n        .on('click', this.handleClick)\n      el.append(button)\n    })\n    return el\n  }\n\n  handleClick(e) {\n    let newTextType = e.currentTarget.dataset.type\n    e.preventDefault()\n    this.context.commandManager.executeCommand(this.getCommandName(), {\n      textType: newTextType\n    })\n  }\n}\n\nexport default MinimalSwitchTextTypeTool\n","import { SwitchTextTypeCommand } from 'substance'\nimport MinimalSwitchTextTypeTool from './MinimalSwitchTextTypeTool'\n\nexport default {\n  name: 'minimal-switch-text-type',\n  configure: function(config) {\n    config.addToolGroup('text')\n    config.addCommand('minimal-switch-text-type', SwitchTextTypeCommand, {\n      disableCollapsedCursor: true\n    })\n    config.addTool('minimal-switch-text-type', MinimalSwitchTextTypeTool, {\n      toolGroup: 'text'\n    })\n  }\n}\n","import { PropertyAnnotation, Fragmenter } from 'substance'\n\nclass Comment extends PropertyAnnotation {}\n\nComment.define({\n  type: 'comment',\n  content: { type: 'string', optional: true }\n})\n\n// in presence of overlapping annotations will try to render this as one element\nComment.fragmentation = Fragmenter.SHOULD_NOT_SPLIT\n\nexport default Comment\n","export default {\n\n  type: 'comment',\n  tagName: 'span',\n\n  import: function(el, node) {\n    node.content = el.attr('data-comment')\n  },\n\n  export: function(node, el) {\n    el.attr({\n      'data-comment': node.content\n    })\n  }\n}\n","import { Tool } from 'substance'\n\n/**\n  Tool to edit an existing link.\n\n  Designed so that it can be used either in a toolbar, or within\n  an overlay on the Surface.\n\n  @component\n*/\nclass EditCommentTool extends Tool {\n\n  render($$) {\n    let Input = this.getComponent('input')\n    let Button = this.getComponent('button')\n    let el = $$('div').addClass('sc-edit-comment-tool')\n\n    // GUARD: Return if tool is disabled\n    if (this.props.disabled) {\n      console.warn('Tried to render EditLinkTool while disabled.')\n      return el\n    }\n\n    el.append(\n      $$(Input, {\n        type: 'text',\n        path: [this.props.node.id, 'content'],\n        placeholder: 'Add comment'\n      }),\n      $$(Button, {\n        icon: 'delete',\n        style: this.props.style\n      }).attr('title', this.getLabel('delete-comment'))\n        .on('click', this.onDelete)\n    )\n    return el\n  }\n\n  onDelete(e) {\n    e.preventDefault();\n    let node = this.props.node\n    let sm = this.context.surfaceManager\n    let surface = sm.getFocusedSurface()\n    if (!surface) {\n      console.warn('No focused surface. Stopping command execution.')\n      return\n    }\n    let editorSession = this.context.editorSession\n    editorSession.transaction(function(tx, args) {\n      tx.delete(node.id)\n      return args\n    })\n  }\n}\n\n\nexport default EditCommentTool\n","import { LinkCommand, AnnotationComponent, AnnotationTool, EditAnnotationCommand } from 'substance'\nimport Comment from './Comment'\nimport CommentHTMLConverter from './CommentHTMLConverter'\nimport EditCommentTool from './EditCommentTool'\n\nexport default {\n  name: 'comment',\n  configure: function(config, {\n    toolGroup,\n    disableCollapsedCursor\n  }) {\n    config.addNode(Comment)\n    config.addComponent('comment', AnnotationComponent)\n    config.addConverter('html', CommentHTMLConverter)\n    // We just reuse the link command here\n    config.addCommand('comment', LinkCommand, {\n      nodeType: 'comment',\n      disableCollapsedCursor\n    })\n    config.addCommand('edit-comment', EditAnnotationCommand, {\n      nodeType: 'comment'\n    })\n    config.addTool('comment', AnnotationTool, {\n      toolGroup: toolGroup || 'annotations'\n    })\n    config.addTool('edit-comment', EditCommentTool, {\n      toolGroup: 'overlay'\n    })\n    config.addIcon('comment', { 'fontawesome': 'fa-comment'})\n    config.addLabel('comment', 'Comment')\n    config.addLabel('delete-comment', 'Remove comment')\n  }\n}\n","import {\n  Configurator, BasePackage, HeadingPackage, ParagraphPackage, StrongPackage,\n  EmphasisPackage, LinkPackage, Document\n} from 'substance'\n\nimport StandaloneHTMLImporter from './StandaloneHTMLImporter'\nimport StandaloneHTMLExporter from './StandaloneHTMLExporter'\nimport MinimalSwitchTextTypePackage from './minimal-switch-text-type/MinimalSwitchTextTypePackage'\nimport CommentPackage from './comment/CommentPackage'\n\nclass StandaloneConfigurator extends Configurator {\n  constructor() {\n    // Tools are not shown for a collapsed cursor\n    let defaultOptions = {\n      disableCollapsedCursor: true\n    }\n    super()\n    this.defineSchema({\n      name: 'html',\n      ArticleClass: Document,\n      defaultTextType: 'paragraph'\n    })\n\n    this.import(BasePackage)\n    // Default packages\n    this.import(ParagraphPackage, defaultOptions)\n    this.import(HeadingPackage, defaultOptions)\n    this.import(StrongPackage, defaultOptions)\n    this.import(EmphasisPackage, defaultOptions)\n    this.import(LinkPackage, defaultOptions)\n    // Custom SwitchTextType package optimized for overlay-only use\n    this.import(MinimalSwitchTextTypePackage)\n    this.import(CommentPackage, defaultOptions)\n    // HTML importers/exporters\n    this.addImporter('html', StandaloneHTMLImporter)\n    this.addExporter('html', StandaloneHTMLExporter)\n\n    // Over-write certain labels\n    this.addLabel('paragraph', 'P')\n    this.addLabel('heading1', 'H1')\n    this.addLabel('heading2', 'H2')\n    this.addLabel('heading3', 'H3')\n  }\n}\n\nexport default StandaloneConfigurator\n","import { Component, ContainerEditor } from 'substance'\n\nclass RichTextArea extends Component {\n\n  render($$) {\n    let node = this.props.node\n    let el = $$('div').addClass('sc-rich-text-area')\n    let editor = $$(ContainerEditor, {\n      node: node,\n      name: node.id,\n      containerId: node.id,\n      textTypes: this.getConfigurator().getTextTypes()\n    })\n    el.append(\n      editor\n    )\n    return el\n  }\n\n  getConfigurator() {\n    return this.context.configurator\n  }\n\n  getHTML() {\n    let exporter = this.getConfigurator().createExporter('html')\n    let els = exporter.convertContainer(this.props.node)\n    if (els.length > 0) {\n      return els.map(function(el) {\n        return el.outerHTML\n      }).join('')\n    } else {\n      return ''\n    }\n  }\n}\n\nexport default RichTextArea\n","import { EditorSession, DefaultDOMElement, BodyScrollPane } from 'substance'\nimport Configurator from './StandaloneConfigurator'\nimport RichTextArea from './RichTextArea'\n\n/*\n  A quasi component, which is actually not used to render an element, just to\n  maintain an EditorSession.\n\n  The idea is that we immitate a setup where the page is rendered by an\n  Application component, having one EditorSession and multiple Surfaces.\n\n  As this top-level component does not really exist, there is no classical\n  render cycle on this level. Instead child components (RichTextArea or\n  RichTextField) are just provided with an adequate context, and necessary\n  props.\n*/\nclass Forms extends BodyScrollPane {\n\n  constructor(root) {\n    super(null, {})\n    this.root = DefaultDOMElement.wrapNativeElement(root || window.document.body)\n    this.__isMounted__ = true\n    this._initialize()\n    // NOTE: we need to call didMount manually to consider handlers set\n    // in BodyScrollPane\n    this.didMount()\n  }\n\n  _initialize() {\n    let editableEls = this.root.findAll('*[editable]')\n    let editables = {}\n    editableEls.forEach(function(el) {\n      let type = el.attr('data-type')\n      let id = el.id\n      if (!id) {\n        console.warn('An editable should have an id.')\n        return\n      }\n      if (!type) {\n        console.warn('An editable should have data-type set.')\n        return\n      }\n      if (editables[id]) {\n        console.error('An editable with the same id already exists.')\n        return\n      }\n      editables[id] = {\n        id: id, type: type, el: el\n      }\n    })\n    let configurator = new Configurator()\n\n    this.configurator = configurator\n    this.doc = this._importDocument(editables)\n    this.editorSession = new EditorSession(this.doc, {\n      configurator: this.configurator\n    })\n    this.componentRegistry = configurator.getComponentRegistry()\n    this.toolGroups = configurator.getToolGroups()\n    this.labelProvider = configurator.getLabelProvider()\n    this.iconProvider = configurator.getIconProvider()\n    // legacy\n    this.surfaceManager = this.editorSession.surfaceManager\n    this.commandManager = this.editorSession.commandManager\n    this.dragManager = this.editorSession.dragManager\n    this.macroManager = this.editorSession.macroManager\n    this.converterRegistry = this.editorSession.converterRegistry\n    this.globalEventHandler = this.editorSession.globalEventHandler\n    this.editingBehavior = this.editorSession.editingBehavior\n    this.markersManager = this.editorSession.markersManager\n    this.editables = this._mountEditables(editables)\n  }\n\n  getChildContext() {\n    return {\n      scrollPane: this,\n      configurator: this.configurator,\n      editorSession: this.editorSession,\n      doc: this.editorSession.getDocument(),\n      componentRegistry: this.componentRegistry,\n      surfaceManager: this.editorSession.surfaceManager,\n      commandManager: this.editorSession.commandManager,\n      dragManager: this.editorSession.dragManager,\n      macroManager: this.editorSession.macroManager,\n      converterRegistry: this.editorSession.converterRegistry,\n      globalEventHandler: this.editorSession.globalEventHandler,\n      editingBehavior: this.editorSession.editingBehavior,\n      markersManager: this.editorSession.markersManager,\n      toolGroups: this.toolGroups,\n      labelProvider: this.labelProvider,\n      iconProvider: this.iconProvider\n    }\n  }\n\n  _importDocument(items) {\n    let importer = this.configurator.createImporter('html')\n    Object.keys(items).forEach((key) => {\n      let item = items[key]\n      let el = item.el\n      let id = item.id\n      // TODO: we may want to consider multiple editable types\n      // (e.g. multi-line vs single line inputs)\n      importer.convertContainer(el.children, id)\n    })\n    return importer.generateDocument()\n  }\n\n  _mountEditables(items) {\n    let editables = {}\n    let doc = this.doc\n\n    // Setup overlay component\n    let Overlay = this.componentRegistry.get('overlay')\n    let overlay = new Overlay(this, {\n      toolGroups: ['annotations', 'text', 'overlay']\n    })\n    // initial render\n    overlay.rerender()\n    // NOTE: as this component is not really in the DOM, we need to trigger\n    // didMount on our own\n    overlay.triggerDidMount()\n    this.root.append(overlay.el)\n\n    Object.keys(items).forEach((key) => {\n      let item = items[key]\n      let el = item.el\n      let id = item.id\n      let editable\n\n      // TODO: we may want to consider multiple editable types\n      // (e.g. multi-line vs single line inputs)\n      let container = doc.get(id)\n      editable = new RichTextArea(this, { node: container }, el)\n      editables[id] = editable\n      // take over ownership\n      editable.rerender()\n\n      // NOTE: as this component is not really in the DOM, we need to trigger\n      // didMount on our own\n      editable.triggerDidMount()\n    })\n    return editables\n  }\n\n  getHTML(name) {\n    return this.editables[name].getHTML()\n  }\n\n}\n\nexport default Forms\n","import Forms from './Forms'\n\nwindow.onload = function() {\n  let forms = new Forms(window.document.body)\n  window.substanceForms = forms\n}\n"],"names":["super","HTMLImporter","HTMLExporter","let","this","Tool","SwitchTextTypeCommand","PropertyAnnotation","Fragmenter","AnnotationComponent","LinkCommand","EditAnnotationCommand","AnnotationTool","Document","BasePackage","ParagraphPackage","HeadingPackage","StrongPackage","EmphasisPackage","LinkPackage","Configurator","ContainerEditor","Component","DefaultDOMElement","EditorSession","BodyScrollPane"],"mappings":"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"}